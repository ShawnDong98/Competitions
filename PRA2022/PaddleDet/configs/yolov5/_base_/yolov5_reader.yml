input_height: &input_height 608
input_width: &input_width 608
input_size: &input_size [*input_height, *input_width]

worker_num: 4
TrainReader:
  inputs_def:
      num_max_boxes: 50
  sample_transforms:
    - Decode: {}
    - RandomFlip: {}
  batch_transforms:
    - BatchRandomResize: {target_size: [320, 352, 384, 416, 448, 480, 512, 544, 576, 608, 640, 672, 704, 736, 768], random_size: True, random_interp: True, keep_ratio: False}
    - BboxXYXY2XYWH: {}
    - NormalizeBox: {}
    # - PadBox: {num_max_boxes: 50}
    - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
    - Permute: {}
  batch_size: 8
  shuffle: true
  drop_last: False
  use_shared_memory: true
  collate_batch: False


EvalReader:
  inputs_def:
    num_max_boxes: 50
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *input_size, keep_ratio: True, interp: 1}
    - Pad: {size: *input_size, fill_value: [114., 114., 114.]}
    - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
    - Permute: {}
  batch_size: 16


TestReader:
  inputs_def:
    image_shape: [3, 640, 640]
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *input_size, keep_ratio: True, interp: 1}
    - Pad: {size: *input_size, fill_value: [114., 114., 114.]}
    - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
    - Permute: {}
  batch_size: 16
  fuse_normalize: True